/*
 * Copyright 2018 Infostellar, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Required by gradle plugin but we don't generate Java here
apply plugin: 'java'
apply plugin: 'com.google.protobuf'

dependencies {
    protobuf project(':api')
}

protobuf {
    protoc {
        path = file('build/conan/bin/protoc')
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                cpp {
                    outputSubDir = '../../../../conan/src'
                }

                remove java
            }
            task.plugins {
                grpc_cpp {
                    outputSubDir = '../../../../conan/src'
                }
            }
        }
    }

    plugins {
        grpc_cpp {
            path = file('build/conan/bin/grpc_cpp_plugin')
        }
    }

}

task downloadConanDeps {
    inputs.file 'conanfile.txt'
    outputs.dir 'build/conan/bin'

    def conanDir = file('build/conan')
    doFirst {
        conanDir.mkdirs()
        file("${conanDir}/src").mkdirs()

        copy {
            from 'package'
            into conanDir
        }

        exec {
            executable 'bash'
            args '-c', condaCommand(
                    'conan remote add -f bincrafters https://api.bintray.com/conan/bincrafters/public-conan && ' +
                            'conan remote add -f inexorgame https://api.bintray.com/conan/inexorgame/inexor-conan && ' +
                            'conan install . -s compiler=gcc -s compiler.libcxx=libstdc++ -s compiler.version=7')
            workingDir conanDir
        }
    }
}

afterEvaluate {
    tasks.generateProto.dependsOn downloadConanDeps
    tasks.generateProto.doLast {
        delete 'build/conan/src/google'
    }
}
