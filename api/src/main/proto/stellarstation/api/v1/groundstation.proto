/*
 * Copyright 2018 Infostellar, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

import "google/protobuf/timestamp.proto";

package stellarstation.api.v1.groundstation;

option go_package = "stellarstation/groundstation";

option java_multiple_files = true;
option java_outer_classname = "GroundStationProto";
option java_package = "com.stellarstation.api.v1.groundstation";

// The public API of StellarStation for use by ground station operators integrating with the
// StellarStation ground network. It is invalid to specify ground station IDs that the operator
// does not own. Only using IDs shown on the StellarStation Console or returned in API responses
// will ensure all inputs are valid.
//
// A plan is a scheduled pass that will be executed to send and receive data between the ground
// station and satellite during the time range.
//
// A plan is a scheduled pass that will be executed to send and receive data between the ground
// station and satellite during the time range.
service GroundStationService {
  // Lists the plans for a particular ground station.
  //
  // The request will be closed with an `INVALID_ARGUMENT` status if `ground_station_id`,
  // `aos_after`, or `aos_before` are missing, or the duration between the two times is longer than
  // 31 days.
  rpc ListGroundStationPlans (ListGroundStationPlansRequest) returns (ListGroundStationPlansResponse);
}

//----------------------------------------------------------------------------------------------
// Scheduling APIs.
//----------------------------------------------------------------------------------------------

// Request for the `ListGroundstationPlans` method.
message ListGroundStationPlansRequest {
  // The ID of the ground station to list plans for. The ID can be found on the StellarStation
  // Console page for the ground station.
  string ground_station_id = 1;

  // The start time of the range of plans to list (inclusive). Only plans with an Acquisition of
  // Signal (AOS) at or after this time will be returned. It is an error for the duration between
  // `aos_after` and `aos_before` to be longer than 31 days.
  google.protobuf.Timestamp aos_after = 2;


  // The end time of the range of plans to list (exclusive). Only plans with an Acquisition of
  // Signal (AOS) before this time will be returned. It is an error for the duration between
  // `aos_after` and `aos_before` to be longer than 31 days.
  google.protobuf.Timestamp aos_before = 3;
}

// A response from the `ListGroundstationPlans` method.
message ListGroundStationPlansResponse {
  // The requested list of plans for the ground station.
  repeated Plan plan = 1;
}

// A scheduled pass. The plan will be executed on its ground station to communicate with its satellite
// during a time range between AOS and LOS, unless explicitly cancelled.
message Plan {
  // The ID of this plan.
  string plan_id = 1;

  // The TLE for the satellite in this plan.
  Tle tle = 2;

  // The time of AOS between the ground station and satellite in this plan.
  google.protobuf.Timestamp aos_time = 3;

  // The time of LOS between the ground station and satellite in this plan.
  google.protobuf.Timestamp los_time = 4;

  // The center frequency, in Hz, for downlinking in this plan. 0 if downlink is not available in
  // this plan.
  uint64 downlink_center_frequency_hz = 5;

  // The center frequency, in Hz, for uplinking in this plan. 0 if uplink is not available in this
  // plan.
  uint64 uplink_center_frequency_hz = 6;
}

// Unparsed TLE data for a satellite - https://en.wikipedia.org/wiki/Two-line_element_set
message Tle {
  // The first line of the TLE. Not a title line.
  string line_1 = 1;

  // The second line of the TLE.
  string line_2 = 2;
}
